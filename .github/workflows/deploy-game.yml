name: Deploy Game

on:
  workflow_dispatch:
    inputs:
      channel:
        description: 'Channel'
        required: true
        default: 'beta'
        type: choice
        options:
        - prod
        - beta

defaults:
  run:
    shell: bash

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    environment:
      name: ${{ github.event.inputs.channel }}
      url: ${{ fromJson('{"prod":"https://rollycubes.com","beta":"https://beta.rollycubes.com"}')[github.event.inputs.channel] }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: '16.x'

    - name: Log in to the Container registry
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
      with:
        context: game
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.event.inputs.channel }}

    - name: Build client
      run: npm install && npm run build
      working-directory: client

    # Deploy it
    - name: ssh-scp-ssh-pipelines
      uses: cross-the-world/ssh-scp-ssh-pipelines@78e864b4890087a58248ff39320406971ca88b89
      with:
        port: 22222
        host: ${{ secrets.DO_SERVER_IP }}
        user: root
        key: ${{ secrets.DO_SSH_KEY }}
        first_ssh: |
          cd /root/game/${{ github.event.inputs.channel }}
          CHANNEL=${{ github.event.inputs.channel }} docker-compose down || true
          rm -rf /root/client/${{ github.event.inputs.channel }}/*
        # scp from local to remote
        scp: |
          game/docker-compose.yml => '/root/game/${{ github.event.inputs.channel }}'
          'client/build/*' => '/root/client/${{ github.event.inputs.channel }}/'
        # execute post-commands after scp
        last_ssh: |
          cd /root/game/${{ github.event.inputs.channel }}
          CHANNEL=${{ github.event.inputs.channel }} docker-compose pull
          CHANNEL=${{ github.event.inputs.channel }} docker-compose up -d
